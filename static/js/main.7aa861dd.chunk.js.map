{"version":3,"sources":["logo.png","components/common/Column.js","components/CountryCombo.js","components/Sender.js","hooks/useForm.js","components/context/MessageContext.js","components/History.js","components/Footer.js","components/Header.js","App.js","i18n.js","serviceWorker.js","index.js"],"names":["module","exports","Column","props","className","children","selectize","countries","map","c","name","callingCodes","CountryCombo","memo","handleChanges","form","useState","setCountries","t","useTranslation","loading","setLoading","error","setError","useEffect","console","log","a","async","fetch","then","r","json","ipCliente","countriesArr","country","find","alpha2Code","countryCode","load","value","options","onChange","placeholder","Sender","sendMessage","initialValues","values","setValues","event","target","useForm","undefined","phone","message","onSubmit","e","htmlFor","rows","cols","label","icon","iconPos","React","createContext","history","History","useContext","MessageContext","reversedHistory","setReversedHistory","visible","setVisible","reverse","footer","onClick","m","i","key","title","moment","date","format","fromNow","header","style","width","modal","onHide","rel","href","changeLocale","logo","src","alt","App","current","localStorage","getItem","length","JSON","parse","setHistory","locale","setLocale","i18n","useCallback","lang","changeLanguage","num","to","save","preventDefault","window","open","state","updatedHistory","push","Date","setItem","stringify","Provider","resources","en","translation","es","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7aa861dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.81c76b18.png\";","import React from \"react\";\n\nexport const Column = (props) => {\n\n\treturn (\n\t\t<div className={props.className ? props.className : 'p-col'}>\n\t\t\t{props.children}\n\t\t</div>\n\t)\n}","import React, {memo, useEffect, useState} from 'react';\n\nimport {Dropdown} from 'primereact/dropdown';\nimport { useTranslation } from 'react-i18next';\n\nconst selectize = (countries)=>{\n\treturn countries && countries.map(c=>{return {\n\t\t\"label\": `${c.name} (${c.callingCodes[0]})` ,\n\t\t\"value\": c.callingCodes[0]\n\t}});\n}\n\nexport const CountryCombo = memo(({handleChanges, form}) => {\n\n\tconst [countries, setCountries] = useState([]);\n\tconst {t} = useTranslation();\n\t\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState(false);\n\n\tuseEffect(()=>{\n\t\tconsole.log(\"effect\");\n\t\tconst load = async ()=>{\n\t\t\ttry{\n\t\t\t\tsetLoading(true);\n\t\t\t\tconst ipCliente = await fetch(\"http://ip-api.com/json?fields=countryCode\").then(r=>r.json());\n\t\t\t\tconst countriesArr = await fetch(\"https://restcountries.eu/rest/v2/all?fields=name;callingCodes;alpha2Code\").then(r=>r.json());\n\t\t\t\tsetCountries(countriesArr);\n\t\t\t\tform.country = countriesArr.find(c=>c.alpha2Code === ipCliente.countryCode).callingCodes[0];\n\t\t\t\tsetLoading(false);\n\t\t\t}catch(e){\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetError(true);\n\t\t\t}\n\t\t};\n\t\tload();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{ (loading) && <pre>{t('loading')}...</pre> }\n\t\t\t{ (error) && <h3>{t('paisesError')}</h3> }\n\t\t\t{ countries && <Dropdown name=\"country\" value={form.country} options={selectize(countries)} onChange={handleChanges} placeholder={t(\"selectCountry\")}/>}\n\t\t</>\n\t);\n\n});\n\n","import React, {memo} from 'react';\nimport { useForm } from '../hooks/useForm';\nimport {InputText} from 'primereact/inputtext';\nimport {InputTextarea} from 'primereact/inputtextarea';\nimport {Button} from 'primereact/button';\n\nimport {Column} from './common/Column';\nimport { useTranslation } from 'react-i18next';\nimport { CountryCombo } from './CountryCombo';\n\n\n\nexport const Sender = memo(({sendMessage}) => {\n\n\tconst [form, handleChanges] = useForm({country: undefined, phone: '', name: '', message: ''});\n\tconst {t} = useTranslation();\n\n\treturn (\n\t\t<form onSubmit={(e)=>sendMessage(e, form.country+form.phone, form.name, form.message)} className=\"sender-form\">\n\t\t\t<Column className=\"p-col-6 p-offset-3\">\n\t\t\t\t<CountryCombo handleChanges={handleChanges} form={form}/>\n\t\t\t</Column><br/>\n\t\t\t<Column className=\"p-col-6 p-offset-3\">\n\t\t\t\t<span className=\"p-float-label\">\n\t\t\t\t\t<InputText name=\"phone\" value={form.phone} onChange={handleChanges} />\n\t\t\t\t\t<label htmlFor=\"in\">{t('phoneNumber')}</label>\n\t\t\t\t</span>\n\t\t\t</Column><br/>\n\t\t\t<Column className=\"p-col-6 p-offset-3\">\n\t\t\t\t<span className=\"p-float-label\">\n\t\t\t\t\t<InputText name=\"name\" value={form.name} onChange={handleChanges} />\n\t\t\t\t\t<label htmlFor=\"name\">{t('name')}</label>\n\t\t\t\t</span>\n\t\t\t</Column><br/>\n\t\t\t<Column className=\"p-col-6 p-offset-3\">\n\t\t\t\t<span className=\"p-float-label\">\n\t\t\t\t\t<InputTextarea rows={5} cols={30}  name=\"message\" onChange={handleChanges} value={form.message}/>\n\t\t\t\t\t<label htmlFor=\"in\">{t('message')}</label>\n\t\t\t\t</span>\n\t\t\t</Column><br/>\n\t\t\t<Column className=\"p-col-6 p-offset-3\">\n\t\t\t\t<Button label={t('send')} icon=\"pi pi-check\" iconPos=\"right\" />\n\t\t\t</Column>\n\t\t</form>\n\t)\n});","import {\n\tuseState\n} from 'react';\n\nexport const useForm = (initialValues) => {\n\n\tconst [values, setValues] = useState(initialValues);\n\n\tconst handleChange = (event) => {\n\t\t\n\t\tconst {\n\t\t\tname,\n\t\t\tvalue\n\t\t} = event.target;\n\t\t\n\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\t[name]: value\n\t\t});\n\t}\n\n\treturn [values, handleChange];\n\n}\n","import React from 'react';\n\nexport default React.createContext({history:[]});","import React, {memo, useContext, useState, useEffect} from 'react';\nimport MessageContext from './context/MessageContext';\nimport * as moment from 'moment';\nimport { Button } from 'primereact/button';\nimport {Dialog} from 'primereact/dialog';\nimport { useTranslation } from 'react-i18next';\n\nexport const History = memo(({sendMessage})=>{\n\n\tconst {history} = useContext(MessageContext);\n\tconst [reversedHistory, setReversedHistory] = useState([]);\n\tconst [visible, setVisible] = useState(false);\n\tconst [t] = useTranslation();\n\t\n\tuseEffect(()=>{\n\t\tif (history)\n\t\t\tsetReversedHistory(history.reverse());\n\t}, [history])\n\n\tconst footer = (\n\t\t<div>\n\t\t\t<Button label=\"Si\" icon=\"pi pi-check\" onClick={()=>setVisible(false)} />\n\t\t\t<Button label=\"No\" icon=\"pi pi-times\" onClick={()=>setVisible(false)} />\n\t\t</div>\n\t);\n\t\n\treturn (\n\t\t<>\n\t\t\t<ul>\n\t\t\t\t{reversedHistory.map((m,i)=>(\n\t\t\t\t\t<li key={i} title={moment(m.date).format('DD/MM/YYYY HH:mm')} className=\"pointered\">\n\t\t\t\t\t\t<span onClick={(e)=>sendMessage(e, m.phone, m.name, m.message, false)}>\n\t\t\t\t\t\t\t{m.name} {moment(m.date).fromNow()}\n\t\t\t\t\t\t</span> \n\t\t\t\t\t\t<span className=\"pi pi-info\" onClick={()=>setVisible(true)}></span>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t<Dialog header=\"Numero valido\" footer={footer} visible={visible} style={{width: '50vw'}} modal={true} onHide={()=>setVisible(false)}>\n\t\t\t\t{t('validNumberQuestion')}\n\t\t\t</Dialog>\n\n\t\t</>\n\n\t)\n\n})","import React, { memo } from 'react';\n\nconst Footer = ()=> (\n\t<footer>\n\t\tby <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://thinkup.com.ar/contacto\" rel=\"noreferrer\">ThinkUp Studios</a> - Argentina - 2020\n\t</footer>\n);\n\nexport default memo(Footer);","import React from 'react'\nimport { useTranslation } from 'react-i18next';\nimport { Column } from './common/Column';\n\nconst Header = ({changeLocale, logo}) => {\n\n\tconst {t} = useTranslation();\n\n\treturn (\n\t\t<header className=\"App-header\">\n\t\t\t<div className=\"p-grid\">\n\t\t\t\t<Column className=\"p-col-2 p-offset-10 pointered lang\">\n\t\t\t\t\t<span onClick={()=>changeLocale('es')}>es</span> | \n\t\t\t\t\t<span onClick={()=>changeLocale('en')}> en</span>\n\t\t\t\t</Column>\n\t\t\t\t<Column className=\"p-col-3 text-center\">\n\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" /><br/>\n\t\t\t\t\t<small>Wasapega v2</small>\n\t\t\t\t</Column>\n\t\t\t\t<Column className=\"p-col-9 text-middle\">\n\t\t\t\t\t<h2>{t('title1')}</h2>\n\t\t\t\t</Column>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n\nexport default React.memo(Header);","import React, {useState, useCallback} from 'react';\nimport logo from './logo.png';\nimport 'primereact/resources/themes/rhea/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'primeflex/primeflex.css';\nimport './App.css';\n\nimport {Sender} from \"./components/Sender\"\nimport MessageContext from './components/context/MessageContext';\nimport { Column } from './components/common/Column';\nimport * as moment from 'moment';\nimport { History } from './components/History';\nimport { useTranslation } from 'react-i18next';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\n\nfunction App() {\n\n\tconst [history, setHistory] = useState(()=>{\n\t\tconst current = localStorage.getItem(\"messageHistory\");\n\t\tconsole.log(current);\n\t\tif (current && current.length){\n\t\t\treturn JSON.parse(current);\n\t\t}\n\t\treturn [];\n\t});\n\tconst [locale, setLocale] = useState(\"es\");\n\n\tconst { i18n } = useTranslation();\n\n\tconst changeLocale = useCallback((lang)=>{\n\t\ti18n.changeLanguage(lang);\n\t\tsetLocale(lang);\n\t\tmoment.locale(lang);\n\t},[]);\n\n\tconst sendMessage = useCallback((event, num, to, message, save=true)=>{\n\t\tevent.preventDefault();\n\t\twindow.open(`https://wa.me/${num}?text=${message}`);\n\t\tif(save)\n\t\t\tsetHistory((state)=>{\n\t\t\t\tconst updatedHistory = [...state];\n\t\t\t\tupdatedHistory.push({\n\t\t\t\t\tphone:num,\n\t\t\t\t\tname: to,\n\t\t\t\t\tmessage,\n\t\t\t\t\tdate: new Date()\n\t\t\t\t});\n\t\t\t\tlocalStorage.setItem(\"messageHistory\", JSON.stringify(updatedHistory));\n\t\t\t\treturn updatedHistory;\n\t\t\t})\n\t},[]);\n\n  \treturn (\n\t\t<>\n\t\t\t<div className=\"App\">\n\t\t\t\t<MessageContext.Provider value={{history:history, locale: locale}}>\n\t\t\t\t\t<Header changeLocale={changeLocale} logo={logo} />\n\t\t\t\t\t<div className=\"p-grid\">\n\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t<Sender sendMessage={sendMessage} />\n\t\t\t\t\t\t</Column>\t\t\t\t\t\n\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t<History sendMessage={sendMessage} />\n\t\t\t\t\t\t</Column>\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</MessageContext.Provider>\n\t\t\t</div>\n\t\t\t<Footer />\n\t\t</>\n  \t);\n}\n\nexport default App;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport es from \"./i18n/es\"\nimport en from \"./i18n/en\"\n\n// the translations\n// (tip move them in a JSON file and import them)\nconst resources = {\n  en: {\n    translation: en\n  },\n  es: {\n\t  translation: es\n  }\n};\n\nconsole.log(resources);\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: \"es\",\n    keySeparator: false, // we do not use keys in form messages.welcome\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\n  export default i18n;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './i18n';\nimport * as serviceWorker from './serviceWorker';\nimport 'moment/locale/es';\nimport 'moment/locale/en-gb';\nimport moment from 'moment';\n\nmoment.locale(\"es\");\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}